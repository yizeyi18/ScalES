#/usr/bin/bash

DGDFT_DIR     = /global/u1/l/linlin/project/NoPetscEO

SCALAR = REAL 
#SCALAR = COMPLEX

# inclues
BLOPEX_INCLUDE   = -I${DGDFT_DIR}/external/blopex

FFTW_INCLUDE     = -I/opt/fftw/3.2.2.1/include
DGDFT_INCLUDE    = -I${DGDFT_DIR}/include 
INCLUDES         = ${DGDFT_INCLUDE} ${BLOPEX_INCLUDE} ${FFTW_INCLUDE}

BLOPEX_LIB       = ${DGDFT_DIR}/external/blopex/libblopex.a 
GFORTRAN_LIB     =
SCALAPACK_LIB    =
FFTW_LIB         = -L/opt/fftw/3.2.2.1/lib -lfftw3
LAPACK_LIB       = 
BLAS_LIB         = 

DGDFT_LIB    = ${DGDFT_DIR}/src/libdgdft.a
LIBS         = ${DGDFT_LIB} ${BLOPEX_LIB} ${FFTW_LIB} ${LAPACK_LIB} ${BLAS_LIB} ${GFORTRAN_LIB}

CC           = cc
CXX          = CC
FC           = ftn
LOADER       = CC

AR           = ar 
ARFLAGS      = rvcu
# For System V based machine without ranlib, like Cray and SGI,
# use touch instead.
#RANLIB      = touch
RANLIB       = ranlib

RM           = rm
RMFLAGS      = -f

# Different compiling and linking options.
#
MODE	         = debug

ifeq ($(MODE), debug)
  ifeq (${SCALAR}, COMPLEX)
	  COMMONDEFS   = -D_USE_COMPLEX_ -U_RELEASE_
  else
	  COMMONDEFS   = -U_RELEASE_
  endif

  CFLAGS       = -O2 -g ${INCLUDES}
  FFLAGS       = -O2 -g ${INCLUDES}
  CXXFLAGS     = -O2 -g ${INCLUDES}
	CCDEFS       = ${COMMONDEFS}
	CPPDEFS      = ${COMMONDEFS}
  LOADOPTS     = ${LIBS}
endif


# Compilation replacement rules

%.o: %.c
	${CC} -c ${CFLAGS} ${CCDEFS} $< 
%.o: %.cpp
	${CXX} -c ${CXXFLAGS} ${CPPDEFS} $< 
%.o: %.f
	${FC} -c ${FFLAGS} $<
%.o: %.F
	${FC} -c ${FFLAGS} $<

# Generate auto-dependencies (for cpp files now)
%.d: %.cpp
	@set -e; rm -f $@; \
	$(CXX) -M $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@;\
	rm -f $@.$$$$
