#/usr/bin/bash

COMPILE_MODE     = release
USE_COMPLEX      = 0
USE_OPENMP       = 0
USE_PROFILE      = 0
USE_PEXSI        = 1


ifeq (${COMPILE_MODE}, release)
  COMPILE_DEF    = -DRELEASE
  COMPILE_FLAG   = -O3 -w 
endif
ifeq (${COMPILE_MODE}, debug)
  COMPILE_DEF    = -DDEBUG=1
  COMPILE_FLAG   = -O2 -w
endif

ifeq (${USE_COMPLEX}, 1)
  SCALAR_DEF    = -DCOMPLEXSCALAR
endif


ifeq (${USE_OPENMP}, 1)
  OPENMP_DEF   = -DOPENMP
	OPENMP_FLAG  = -fopenmp
endif

ifeq (${USE_PROFILE}, 1)
	PROFILE_FLAG  = -g -pg
endif

ifeq (${USE_PEXSI}, 1)
  PEXSI_DEF        = -DPEXSI

  PEXSI_DIR        = $(HOME)/Projects/pexsi
  DSUPERLU_DIR     = $(HOME)/Documents/Software/SuperLU_DIST_3.3
  METIS_DIR        = $(HOME)/Software/metis-5.1.0/build_release
  SCOTCH_DIR       = $(HOME)/Software/scotch_6.0.0

  PEXSI_INCLUDE    = -I$(PEXSI_DIR)/include
  PEXSI_SRC_LIB    = ${PEXSI_DIR}/src/libpexsi_release_osx_v0.5.5.a
  DSUPERLU_LIB     = ${DSUPERLU_DIR}/build_release/libsuperlu_dist_3.3.a
  SCOTCH_LIB       = -L${SCOTCH_DIR}/lib -lptscotchparmetis -lptscotch -lptscotcherr -lscotch
  METIS_LIB        = -L${METIS_DIR}/lib -lmetis
  PEXSI_LIB        = ${PEXSI_SRC_LIB} ${DSUPERLU_LIB} ${SCOTCH_LIB}  ${METIS_LIB} 
endif




DGDFT_DIR     = /Users/linlin/Projects/dgdft

# inclues
BLOPEX_INCLUDE   = -I${DGDFT_DIR}/external/blopex
FFTW_INCLUDE     = -I/usr/local/include
DGDFT_INCLUDE    = -I${DGDFT_DIR}/include 
LIBXC_INCLUDE    = -I/Users/linlin/Software/libxc/build/include
#LIBXC_INCLUDE    = -I/opt/local/include
INCLUDES         = ${DGDFT_INCLUDE} ${PEXSI_INCLUDE} ${LIBXC_INCLUDE} ${BLOPEX_INCLUDE} ${FFTW_INCLUDE}

# Libraries
LIBXC_LIB        = /Users/linlin/Software/libxc/build/lib/libxc.a
BLOPEX_LIB       = ${DGDFT_DIR}/external/blopex/libblopex.a 
GFORTRAN_LIB     = /usr/local/lib/libgfortran.dylib
#GFORTRAN_LIB     =/opt/local/lib/gcc44/libgfortran.dylib
SCALAPACK_LIB    =/Users/linlin/Software/scalapack-2.0/libscalapack.a
FFTW_LIB         = -L/usr/local/lib -lfftw3_mpi -lfftw3 -lm
LAPACK_LIB       = -llapack
BLAS_LIB         = -lblas
#BLAS_LIB         = /Users/linlin/Software/BLAS/libblas.a
#BLAS_LIB         = /Users/linlin/Software/OpenBLAS/build/lib/libopenblas.a

DGDFT_LIB    = ${DGDFT_DIR}/src/libdgdft.a
LIBS         = ${DGDFT_LIB} ${PEXSI_LIB} ${LIBXC_LIB} ${BLOPEX_LIB} ${FFTW_LIB} ${SCALAPACK_LIB} ${LAPACK_LIB} ${BLAS_LIB} ${GFORTRAN_LIB}

CC           = mpicc 
CXX          = mpicxx
FC           = mpif90
LOADER       = mpicxx

AR           = ar 
ARFLAGS      = rvcu
# For System V based machine without ranlib, like Cray and SGI,
# use touch instead.
#RANLIB      = touch
RANLIB       = ranlib

RM           = rm
RMFLAGS      = -f

# Different compiling and linking options.
#


CFLAGS       = ${COMPILE_FLAG} ${OPENMP_FLAG} ${PROFILE_FLAG} ${INCLUDES}
FFLAGS       = ${COMPILE_FLAG} ${OPENMP_FLAG} ${PROFILE_FLAG} ${INCLUDES}
CXXFLAGS     = ${COMPILE_FLAG} ${OPENMP_FLAG} ${PROFILE_FLAG} ${INCLUDES} 
CCDEFS       = ${COMPILE_DEF} ${PEXSI_DEF} ${SCALAR_DEF} ${OPENMP_DEF}
CPPDEFS      = ${COMPILE_DEF} ${PEXSI_DEF} ${SCALAR_DEF} ${OPENMP_DEF}
LOADOPTS     = ${OPENMP_FLAG} ${PROFILE_FLAG} ${LIBS} 


# Compilation replacement rules

%.o: %.c
	${CC} -c ${CFLAGS} ${CCDEFS} $< 
%.o: %.cpp
	${CXX} -c ${CXXFLAGS} ${CPPDEFS} $< 
%.o: %.f
	${FC} -c ${FFLAGS} $<
%.o: %.F
	${FC} -c ${FFLAGS} $<

# Generate auto-dependencies (for cpp files now)
%.d: %.cpp
	@set -e; rm -f $@; \
	$(CXX) -M $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@;\
	rm -f $@.$$$$
